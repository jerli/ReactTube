extends layout

block content
  h1.title ReactTube
  h1.video-title
  #player
  p.curTime 

    script.

      var w = window.innerWidth - 30;
      if (w > 1149) {
        w = 1149
      }
      var tag = document.createElement('script');
      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
      var player;
      function onYouTubeIframeAPIReady() {
      player = new YT.Player('player', {
      height: (w*(7/11.5)).toString(),
      width: w.toString(),
      videoId: '#{link}',
      theme: 'light',
      events: {
      'onReady': onPlayerReady,
      'onStateChange': onPlayerStateChange
      }
      });
      }
      function onPlayerReady(event) {
      event.target.playVideo();
      }
      var done = false;
      function onPlayerStateChange(event) {
      if (event.data == YT.PlayerState.PLAYING && !done) {
      //setTimeout(stopVideo, 6000);
      done = true;
      }
      }
      function stopVideo() {
      player.stopVideo();
      }
      var x;
      var sec, min;
      //Runs when YouTube Player is ready
      function onPlayerReady(){
      //Updates time every second
      (function loop() {
      setTimeout(function () {
      x = parseInt(player.getCurrentTime().toString());
      x = x + 1;
      if (x > 60){
      sec = x % 60;
      min = parseInt((x-sec)/60);
      }
      else {
      sec = x;
      min = 0;
      }
      if (sec < 10){
      x = min.toString() + ":0" + sec.toString();
      }
      else{
      x = min.toString() + ":" + sec.toString();
      }
      console.log(x);
      $('.curTime').text("Current Time: "+ x);
      loop()
      }, 1000);
      }());
      //Gets Video Title
      var z;
      z = player.getVideoData();
      $('.video-title').text(z.title);
      }